\ProvidesPackage{lyluatex}

% Dépendances
\RequirePackage{graphicx}
\RequirePackage{keycommand}
\RequirePackage{environ}
\def\luastring#1{\luatexluaescapestring{#1}}
\def\luastringO#1{\luatexluaescapestring{\unexpanded\expandafter{#1}}}
% Script lua
\directlua{dofile(kpse.find_file("lyluatex.lua"))}

% Une tricherie un peu sale pour récupérer la largeur de ligne
\let\bs\textbackslash
{\catcode`p=12 \catcode`t=12 \gdef\un#1pt{#1}}
\newcommand*{\largeur}{\expandafter\un\the\linewidth}
% Taille par défaut des partitions
\newcounter{staffsize}
\setcounter{staffsize}{17}
% Compteurs utiles pour les fragments intégrés
\newcounter{localstaffsize}
\newcounter{tmply}

% La commande principale
\newkeycommand*\includely[staffsize=\arabic{staffsize}][1]{%
    \directlua{InclureLy(\luastring{#1},\luastring{\largeur},\luastring{\commandkey{staffsize}})}
}
\let\lilypondfile\includely

\newkeycommand{\lily}[staffsize=\arabic{staffsize}][autres][1]{%
\setcounter{localstaffsize}{\commandkey{staffsize}}%
\stepcounter{tmply}
\def\lyfile{tmp_ly/\alph{tmply}.ly}
\directlua{Ecrire(\luastringO{#1}, \luastring{\lyfile}}%
\includely[staffsize=\arabic{localstaffsize}]{\lyfile}%
}

\NewEnviron{compilerly}{%
\lily{\BODY}
}

\newkeyenvironment{ly}[staffsize=\arabic{staffsize}][autres]{%
\setcounter{localstaffsize}{\value{staffsize}}
\setcounter{staffsize}{\commandkey{staffsize}}
\stepcounter{tmply}
\def\lyfile{tmp_ly/\alph{tmply}.ly}
\compilerly%
}{
\compilerly%
\setcounter{staffsize}{\value{localstaffsize}}
}

\let\lilypond\ly
\let\endlilypond\endly
